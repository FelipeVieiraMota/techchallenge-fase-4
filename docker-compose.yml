services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: order-management-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservice-network

  postgres:
    container_name: order-management-postgres
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: order_management
    networks:
      - microservice-network
    volumes:
      -  microservice-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  order-management:
    #container_name: order-management-app
    build:
      context: ./order-management-microservice
      dockerfile: Dockerfile
    restart: always
    deploy:
      replicas: 3
    ports:
      - "8080-8082:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/order_management
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      SPRINGDOC_SWAGGER_UI_PATH: /swagger-ui.html
    networks:
      - microservice-network

  delivery-logistic:
    #container_name: delivery-logistic-app
    build:
      context: ./delivery-logistic-microservice
      dockerfile: Dockerfile
    restart: always
    deploy:
      replicas: 3
    ports:
      - "8092-8094:8080"
    #ports:
    #  - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/order_management
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      SPRINGDOC_SWAGGER_UI_PATH: /swagger-ui.html
    networks:
      - microservice-network

volumes:
  microservice-data:

networks:
  microservice-network:
    driver: bridge
